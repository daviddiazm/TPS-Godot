[gd_scene load_steps=5 format=3 uid="uid://dnggagvwn3yn5"]

[ext_resource type="Script" uid="uid://ci4el60gotlmw" path="res://characters/player/camera_system.gd" id="1_508ok"]

[sub_resource type="GDScript" id="GDScript_b886q"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"move_left\", \"move_right\", \"forward\", \"backward\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_yntov"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_wfwh0"]

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_b886q")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("CapsuleShape3D_yntov")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("CapsuleMesh_wfwh0")

[node name="CameraSystem" type="Node3D" parent="." node_paths=PackedStringArray("character")]
script = ExtResource("1_508ok")
character = NodePath("..")

[node name="Camera3D" type="Camera3D" parent="CameraSystem"]
transform = Transform3D(0.978148, 0.0538115, -0.200827, 0, 0.965926, 0.258819, 0.207912, -0.253163, 0.944818, 0.5, 3, 3.58)
